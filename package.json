{
  "name": "app",
  "version": "1.0.0",
  "description": "- `src/` — исходный код (React, Node.js) - `docs/` — автогенерируемая документация - `README.md` — основная информация",
  "main": "index.js",
  "directories": {
    "doc": "docs"
  },
  "scripts": {
    "prestart": "npm run docs:ai:json",
    "predev": "echo \"Skipping AI docs generation due to ENOBUFS error\"",
    "db:sql": "pg_dump -U $PGUSER -h $PGHOST -p $PGPORT --schema-only $PGDATABASE > docs/schema.sql",
    "db:dbml": "npx dbml2sql docs/schema.sql -o docs/db.dbml",
    "db:drop": "dotenv -e .env -- bash -c 'export PGPASSWORD=\"$DB_PASSWORD\"; psql -U \"$DB_USER\" -h \"$DB_HOST\" -p \"$DB_PORT\" -d \"$DB_NAME\" -c \"DROP SCHEMA public CASCADE; CREATE SCHEMA public;\"'",
    "db:schema": "dotenv -e .env -- dbml2sql docs/db.dbml -o schema.sql --postgres && dotenv -e .env -- bash -c 'export PGPASSWORD=\"$DB_PASSWORD\"; psql -U \"$DB_USER\" -h \"$DB_HOST\" -p \"$DB_PORT\" -d \"$DB_NAME\" -f schema.sql'",
    "db:seed": "dotenv -e .env -- bash -c 'export PGPASSWORD=\"$DB_PASSWORD\"; psql -U \"$DB_USER\" -h \"$DB_HOST\" -p \"$DB_PORT\" -d \"$DB_NAME\" -f seed.sql'",
    "db:reset": "npm run db:drop && npm run db:schema && npm run db:seed",
    "test": "echo \"Error: no test specified\" && exit 1",
    "start": "fuser -k 3000/tcp || true && tsc && node server/server.js",
    "dev": "concurrently \"npm run dev:backend:kill_and_start\" \"npm run dev:frontend\"",
    "dev:backend": "nodemon --delay 5s -e ts,tsx --exec \"node --loader ts-node/esm server/app.ts\"",
    "dev:backend:kill_and_start": "(fuser -k 3000/tcp || true) && nodemon --delay 5s -e ts,tsx --exec \"node --loader ts-node/esm server/app.ts\"",
    "dev:frontend": "(fuser -k 5173/tcp || true) && cd client && npm run dev -- --host",
    "docs:ai": "jsdoc2md server/**/*.ts > docs/AI_FUNCTIONS.md",
    "docs:ai:json": "ts-node generate-ai-functions-json.ts",
    "docker:dev": "docker-compose up",
    "docker:dev:build": "docker-compose up --build",
    "docker:prod": "docker-compose -f docker-compose.prod.yml up",
    "docker:prod:build": "docker-compose -f docker-compose.prod.yml up --build",
    "tsc": "tsc",
    "tsc:watch": "tsc --watch"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "type": "module",
  "devDependencies": {
    "@dbml/cli": "^3.13.5",
    "@types/bcryptjs": "^3.0.0",
    "@types/cors": "^2.8.18",
    "@types/express": "^5.0.2",
    "@types/jest": "^29.5.14",
    "@types/jsonwebtoken": "^9.0.9",
    "@types/multer": "^1.4.12",
    "@types/node": "^22.15.21",
    "@types/nodemailer": "^6.4.17",
    "@types/react": "^19.1.5",
    "@types/react-dom": "^19.1.5",
    "@types/uuid": "^10.0.0",
    "@typescript-eslint/eslint-plugin": "^8.32.1",
    "@typescript-eslint/parser": "^8.32.1",
    "concurrently": "^9.1.2",
    "dotenv-cli": "^8.0.0",
    "jsdoc": "^4.0.4",
    "jsdoc-to-markdown": "^8.0.0",
    "nodemon": "^3.1.10",
    "sequelize-cli": "^6.6.3",
    "ts-node": "^10.9.2",
    "typescript": "^5.8.3",
    "umzug": "^3.8.2"
  },
  "dependencies": {
    "@aws-sdk/client-s3": "^3.812.0",
    "@aws-sdk/lib-storage": "^3.812.0",
    "@aws-sdk/s3-request-presigner": "^3.812.0",
    "antd": "^5.25.1",
    "bcryptjs": "^3.0.2",
    "cors": "^2.8.5",
    "dotenv": "^16.5.0",
    "express": "^4.18.2",
    "joi": "^17.13.3",
    "jsonwebtoken": "^9.0.2",
    "moment": "^2.30.1",
    "multer": "^1.4.5-lts.2",
    "nodemailer": "^7.0.3",
    "path-to-regexp": "^8.2.0",
    "pg": "^8.15.6",
    "pg-hstore": "^2.3.4",
    "sequelize": "^6.37.7",
    "winston": "^3.13.0",
    "winston-daily-rotate-file": "^5.0.0",
    "xlsx": "https://cdn.sheetjs.com/xlsx-0.20.2/xlsx-0.20.2.tgz"
  }
}
